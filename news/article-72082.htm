<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://v2raywindows.github.io/news/article-72082.htm" />
    <meta charset="utf-8">
    <meta content="width=device-width, initial-scale=1.0" name="viewport">
    <title>八、C++ 类型强转</title>
        <meta name="description" content="1.静态类型转换 1.语法格式 static_cast&lt;目标类型&gt; (标识符)  2.转化规则 在一个方向上可以作隐式转换，在另外一个方向上就可以作静态转换。 int a = 10; in" />
        <link rel="icon" href="/assets/website/img/v2raywindows/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="V2ray Windows免费节点订阅站">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://v2raywindows.github.io/news/article-72082.htm" />
    <meta property="og:site_name" content="V2ray Windows免费节点订阅站" />
    <meta property="og:title" content="八、C++ 类型强转" />
    <meta property="og:image" content="https://v2raywindows.github.io/uploads/20240730-1/020831da681fb032af8a4a7a173a7272.webp" />
        <meta property="og:release_date" content="2025-03-12T06:07:21" />
    <meta property="og:updated_time" content="2025-03-12T06:07:21" />
        <meta property="og:description" content="1.静态类型转换 1.语法格式 static_cast&lt;目标类型&gt; (标识符)  2.转化规则 在一个方向上可以作隐式转换，在另外一个方向上就可以作静态转换。 int a = 10; in" />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="八、C++ 类型强转">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">

    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,600,600i,700,700i|Montserrat:300,300i,400,400i,500,500i,600,600i,700,700i|Poppins:300,300i,400,400i,500,500i,600,600i,700,700i" rel="stylesheet">
    <!-- Vendor CSS Files -->
    <link href="/assets/website/js/frontend/v2raywindows/aos/aos.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/v2raywindows/bootstrap/css/bootstrap.min.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/v2raywindows/bootstrap-icons/bootstrap-icons.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/v2raywindows/boxicons/css/boxicons.min.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/v2raywindows/glightbox/css/glightbox.min.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/v2raywindows/remixicon/remixicon.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/v2raywindows/swiper/swiper-bundle.min.css" rel="stylesheet">
    <!-- Template Main CSS File -->
    <link href="/assets/website/css/v2raywindows/style.css" rel="stylesheet">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-Q3WH4YV370"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-Q3WH4YV370');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
    <!-- ======= Header ======= -->
<header id="header" class="fixed-top d-flex align-items-center">
    <div class="container d-flex align-items-center justify-content-between">
        <div class="logo">
            <a href="/">
                        <span>V2ray Windows</span>
                        </a>
        </div>
        <nav id="navbar" class="navbar">
            <ul>
                                <li><a class="nav-link" href="/">首页</a></li>
                                <li><a class="nav-link" href="/free-nodes/">免费节点</a></li>
                                <li><a class="nav-link" href="/paid-subscribe/">推荐机场</a></li>
                                <li><a class="nav-link" href="/client.htm">客户端</a></li>
                                <li><a class="nav-link" href="/news/">新闻资讯</a></li>
                            </ul>
            <i class="bi bi-list mobile-nav-toggle"></i>
        </nav><!-- .navbar -->
    </div>
</header><!-- End Header -->
    <main id="main">
        <!-- ======= Breadcrumbs Section ======= -->
        <section class="breadcrumbs">
            <div class="container">
                <div class="d-flex justify-content-between align-items-center">
                    <h1>八、C++ 类型强转</h1>
                    <ol>
                        <li><a href="/">首页</a></li>
                        <li><a href="/news/">新闻资讯</a></li>
                        <li>正文</li>
                    </ol>
                </div>
            </div>
        </section><!-- End Breadcrumbs Section -->
        <!-- ======= Details Section ======= -->
        <section id="details" class="details">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                                        <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> </h1> <h2> <a id="1_1" rel="nofollow"></a>1.静态类型转换</h2> <p>1.语法格式</p> <pre><code class="prism language-c">static_cast<span class="token operator">&lt;</span>目标类型<span class="token operator">&gt;</span> <span class="token punctuation">(</span>标识符<span class="token punctuation">)</span> </code></pre> <p>2.转化规则<br /> 在一个方向上可以作隐式转换，在另外一个方向上就可以作静态转换。</p> <pre><code class="prism language-c"><span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span> <span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span> cout<span class="token operator">&lt;&lt;</span>static_cast<span class="token operator">&lt;</span><span class="token keyword">float</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token operator">/</span>b<span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span> <span class="token comment">//float = int int = float</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span> </code></pre> <pre><code class="prism language-c"><span class="token keyword">int</span> <span class="token operator">*</span>p<span class="token punctuation">;</span> <span class="token keyword">void</span> <span class="token operator">*</span>q<span class="token punctuation">;</span> p <span class="token operator">=</span> static_cast<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">*</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>q<span class="token punctuation">)</span><span class="token punctuation">;</span> </code></pre> <pre><code class="prism language-c"><span class="token keyword">char</span> <span class="token operator">*</span>p <span class="token operator">=</span> static_cast<span class="token operator">&lt;</span><span class="token keyword">char</span><span class="token operator">*</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token function">malloc</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> </code></pre> <h2> <a id="2_25" rel="nofollow"></a>2.重解释类型转换</h2> <p>1.语法格式</p> <pre><code class="prism language-c">reinterpret_cast<span class="token operator">&lt;</span>目标类型<span class="token operator">&gt;</span> <span class="token punctuation">(</span>标识符<span class="token punctuation">)</span> </code></pre> <p>2.转化规则<br /> 将数据以二进制存在形式的重新解释，在双方向上都不可以隐式类型转换的，则需要重解释类型转换</p> <pre><code class="prism language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span> <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string.h&gt;</span></span> using namespace std<span class="token punctuation">;</span> <span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 	<span class="token keyword">int</span> x <span class="token operator">=</span> <span class="token number">0x12345648</span><span class="token punctuation">;</span> 	<span class="token keyword">char</span> <span class="token operator">*</span>p <span class="token operator">=</span> reinterpret_cast<span class="token operator">&lt;</span><span class="token keyword">char</span><span class="token operator">*</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span> 	<span class="token comment">//char*p = static_cast&lt;char*&gt;(&amp;x); error</span> 	<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%x\n"</span><span class="token punctuation">,</span><span class="token operator">*</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span> 	<span class="token keyword">int</span> a<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{<!-- --></span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">}</span><span class="token punctuation">;</span> 	<span class="token keyword">int</span> <span class="token operator">*</span>q <span class="token operator">=</span> reinterpret_cast<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">*</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>a<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 	<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%x\n"</span><span class="token punctuation">,</span><span class="token operator">*</span>q<span class="token punctuation">)</span><span class="token punctuation">;</span> 	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> </code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads/20230118/9c06e3763a17dd82fe9e3ca258cee682.jpg" alt="八、C++ 类型强转"></p> <h2> <a id="3_50" rel="nofollow"></a>3.常类型转换</h2> <p>1.语法格式</p> <pre><code class="prism language-c">const_cast<span class="token operator">&lt;</span>目标类型<span class="token operator">&gt;</span> <span class="token punctuation">(</span>标识符<span class="token punctuation">)</span> <span class="token comment">//目标类类型只能是指针或引用。</span> </code></pre> <p>2.语法规则<br /> 用来移除对象的常量性使用 const_cast 去除 const 限定的，目的不是为了修改它的内容，使用 const_cast 去除 const 限定，通常是为了函数能够接受这个实际参数。</p> <pre><code class="prism language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span> using namespace std<span class="token punctuation">;</span> <span class="token keyword">void</span> <span class="token function">func</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token operator">&amp;</span> ref<span class="token punctuation">)</span> <span class="token comment">//别人己经写好的程序或类库</span> <span class="token punctuation">{<!-- --></span> 	cout<span class="token operator">&lt;&lt;</span>ref<span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 	<span class="token keyword">const</span> <span class="token keyword">int</span> m <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> 	<span class="token function">func</span><span class="token punctuation">(</span>const_cast<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&amp;</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> </code></pre> <p>脱掉const后的引用或指针可以改吗</p> <pre><code class="prism language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span> using namespace std<span class="token punctuation">;</span> <span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 	<span class="token keyword">const</span> <span class="token keyword">int</span> x <span class="token operator">=</span> <span class="token number">200</span><span class="token punctuation">;</span> 	<span class="token keyword">int</span> <span class="token operator">&amp;</span> a <span class="token operator">=</span>const_cast<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&amp;</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// int &amp;a = x;</span> 	a <span class="token operator">=</span> <span class="token number">300</span><span class="token punctuation">;</span> 	cout<span class="token operator">&lt;&lt;</span>a<span class="token operator">&lt;&lt;</span>x<span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span> 	cout<span class="token operator">&lt;&lt;</span><span class="token operator">&amp;</span>a<span class="token operator">&lt;&lt;</span><span class="token string">"---"</span><span class="token operator">&lt;&lt;</span><span class="token operator">&amp;</span>x<span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span> 	<span class="token keyword">int</span> <span class="token operator">*</span>p <span class="token operator">=</span>const_cast<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">*</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// int *p = &amp;x;</span> 	<span class="token operator">*</span>p <span class="token operator">=</span> <span class="token number">400</span><span class="token punctuation">;</span> 	cout<span class="token operator">&lt;&lt;</span>a<span class="token operator">&lt;&lt;</span><span class="token operator">*</span>p<span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span> 	cout<span class="token operator">&lt;&lt;</span>p<span class="token operator">&lt;&lt;</span><span class="token string">"---"</span><span class="token operator">&lt;&lt;</span><span class="token operator">&amp;</span>x<span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span> 	<span class="token keyword">struct</span> <span class="token class-name">A</span> 	<span class="token punctuation">{<!-- --></span> 		<span class="token keyword">int</span> data<span class="token punctuation">;</span> 	<span class="token punctuation">}</span><span class="token punctuation">;</span> 	<span class="token keyword">const</span> A xx <span class="token operator">=</span> <span class="token punctuation">{<!-- --></span><span class="token number">1111</span><span class="token punctuation">}</span><span class="token punctuation">;</span> 	A <span class="token operator">&amp;</span>a1 <span class="token operator">=</span> const_cast<span class="token operator">&lt;</span> A<span class="token operator">&amp;</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>xx<span class="token punctuation">)</span><span class="token punctuation">;</span> 	a1<span class="token punctuation">.</span>data <span class="token operator">=</span> <span class="token number">222</span><span class="token punctuation">;</span> 	cout<span class="token operator">&lt;&lt;</span>a1<span class="token punctuation">.</span>data<span class="token operator">&lt;&lt;</span>xx<span class="token punctuation">.</span>data<span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span> 	A <span class="token operator">*</span>p1 <span class="token operator">=</span> const_cast<span class="token operator">&lt;</span>A<span class="token operator">*</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>xx<span class="token punctuation">)</span><span class="token punctuation">;</span> 	p1<span class="token operator">-&gt;</span>data <span class="token operator">=</span> <span class="token number">333</span><span class="token punctuation">;</span> 	cout<span class="token operator">&lt;&lt;</span>p1<span class="token operator">-&gt;</span>data<span class="token operator">&lt;&lt;</span>xx<span class="token punctuation">.</span>data<span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span> 	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> </code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads/20230118/3dcf7e8ef380e8a4b7ff9e25357b6952.jpg" alt="八、C++ 类型强转"><br /><strong>结论:可以改变 const 自定义类的成员变量，但是对于内置数据类型，却表现未定义行为</strong><br /> 3.const 常变量（补充）<br /> C++中 const 定义的变量称为常变量。变量的形式，常量的作用，用作常量，常用于取代#define 宏常量</p> <h2> <a id="4_107" rel="nofollow"></a>4.动态类型转换</h2> <p>1.语法格式</p> <pre><code class="prism language-c">dynamic_cast<span class="token operator">&lt;</span>目标类型<span class="token operator">&gt;</span> <span class="token punctuation">(</span>标识符<span class="token punctuation">)</span> </code></pre> <p>用于多态中的父子类之间的强制转化</p> </p></div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-71421.htm">宠物领养协议书范本图片高清版 宠物领养协议书范本图片高清版大全</a></p>
                                        <p>下一个：<a href="/news/article-72083.htm">JavaScript中querySelector和getElementByld(getXXXBy XX)的区别</a></p>
                                    </div>
                                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-55686.htm" title="猫根本不必打三联多少钱（猫咪需要打三联多少钱）">猫根本不必打三联多少钱（猫咪需要打三联多少钱）</a></li>
                        <li class="py-2"><a href="/news/article-55127.htm" title="TENSORFLOW：TENSORS">TENSORFLOW：TENSORS</a></li>
                        <li class="py-2"><a href="/news/article-38400.htm" title="单相小型颗粒饲料机价格（小型颗粒饲料机报价）">单相小型颗粒饲料机价格（小型颗粒饲料机报价）</a></li>
                        <li class="py-2"><a href="/news/article-36016.htm" title="兽用疫苗放在冰箱对食物有伤害吗（兽用疫苗可以放家用冰箱里吗）">兽用疫苗放在冰箱对食物有伤害吗（兽用疫苗可以放家用冰箱里吗）</a></li>
                        <li class="py-2"><a href="/news/article-65655.htm" title="猫疫苗三针多久打完有效（猫三针疫苗间隔多久）">猫疫苗三针多久打完有效（猫三针疫苗间隔多久）</a></li>
                        <li class="py-2"><a href="/news/article-63188.htm" title="python中os.path模块">python中os.path模块</a></li>
                        <li class="py-2"><a href="/news/article-39375.htm" title="被猫抓出血了一定要***吗多少钱（被猫抓出血了一定要***吗多少钱一针）">被猫抓出血了一定要***吗多少钱（被猫抓出血了一定要***吗多少钱一针）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-9-free-v2ray.htm" title="1月9日|SSR/Shadowrocket/Clash/V2ray每天更新21.3M/S免费节点订阅链接地址分享">1月9日|SSR/Shadowrocket/Clash/V2ray每天更新21.3M/S免费节点订阅链接地址分享</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-25-free-subscribe-node.htm" title="1月25日|Shadowrocket/Clash/SSR/V2ray每天更新21.7M/S免费节点订阅链接地址分享">1月25日|Shadowrocket/Clash/SSR/V2ray每天更新21.7M/S免费节点订阅链接地址分享</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-2-clash-v2ray-ss-ssr.htm" title="2月2日|Shadowrocket/V2ray/Clash/SSR每天更新21.6M/S免费节点订阅链接地址分享">2月2日|Shadowrocket/V2ray/Clash/SSR每天更新21.6M/S免费节点订阅链接地址分享</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">36</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">84</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">84</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </section><!-- End Details Section -->
    </main><!-- End #main -->
        <!-- ======= Footer ======= -->
    <footer id="footer">
        <div class="container">
            <div class="copyright">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                <a href="/">V2ray Windows免费节点订阅站</a> 版权所有 Powered by WordPress
            </div>
        </div>
    </footer><!-- End Footer -->
    <a href="#" class="back-to-top d-flex align-items-center justify-content-center"><i class="bi bi-arrow-up-short"></i></a>
    <div id="preloader"></div>
    <!-- Vendor JS Files -->
    <script src="/assets/website/js/frontend/v2raywindows/jquery-3.5.1.min.js"></script>
    <script src="/assets/website/js/frontend/v2raywindows/aos/aos.js"></script>
    <script src="/assets/website/js/frontend/v2raywindows/bootstrap/js/bootstrap.bundle.min.js"></script>
    <script src="/assets/website/js/frontend/v2raywindows/php-email-form/validate.js"></script>
    <script src="/assets/website/js/frontend/v2raywindows/purecounter/purecounter.js"></script>
    <script src="/assets/website/js/frontend/v2raywindows/swiper/swiper-bundle.min.js"></script>
    <!-- Template Main JS File -->
    <script src="/assets/website/js/frontend/v2raywindows/main.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>